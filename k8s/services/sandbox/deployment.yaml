apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandbox
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sandbox
      component: executor
  template:
    metadata:
      labels:
        app: sandbox
        component: executor
    spec:
      containers:
      - name: sandbox
        image: langgenius/dify-sandbox:0.2.12
        ports:
        - containerPort: 8194
          name: sandbox
        env:
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: dify-secret
              key: SANDBOX_API_KEY
        - name: GIN_MODE
          valueFrom:
            configMapKeyRef:
              name: dify-config
              key: SANDBOX_GIN_MODE
        - name: WORKER_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: dify-config
              key: SANDBOX_WORKER_TIMEOUT
        - name: ENABLE_NETWORK
          valueFrom:
            configMapKeyRef:
              name: dify-config
              key: SANDBOX_ENABLE_NETWORK
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              name: dify-config
              key: SANDBOX_HTTP_PROXY
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              name: dify-config
              key: SANDBOX_HTTPS_PROXY
        - name: SANDBOX_PORT
          valueFrom:
            configMapKeyRef:
              name: dify-config
              key: SANDBOX_PORT
        - name: PIP_MIRROR_URL
          value: ""
        volumeMounts:
        - name: sandbox-dependencies
          mountPath: /dependencies
        - name: sandbox-conf
          mountPath: /conf
        livenessProbe:
          httpGet:
            path: /health
            port: 8194
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8194
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: sandbox-dependencies
        persistentVolumeClaim:
          claimName: sandbox-dependencies
      - name: sandbox-conf
        persistentVolumeClaim:
          claimName: sandbox-conf